{"version":3,"sources":["../src/app.js"],"names":["app","use","express","static","path","join","__dirname","process","env","NODE_ENV","get","req","res","sendFile","schema","typeDefs","resolvers","endpointURL","bodyParser","json","context","Meetup","City","User"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AAGA;;;;AAEA;AACA,MAAMA,MAAM,wBAAZ;;AAEA;;;AANA;AAOAA,IAAIC,GAAJ,CAAQC,kBAAQC,MAAR,CAAeC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,mBAArB,CAAf,CAAR;AACAN,IAAIC,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACAD,IAAIC,GAAJ,CAAQ,qBAAR;;AAEA;AACA,IAAIM,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCT,MAAIC,GAAJ,CAAQC,kBAAQC,MAAR,CAAe,mBAAf,CAAR;;AAEAH,MAAIU,GAAJ,CAAQ,GAAR,EAAa,CAACC,GAAD,EAAMC,GAAN,KAAc;AACzBA,QAAIC,QAAJ,CAAaT,eAAKC,IAAL,CAAUC,SAAV,EAAqB,cAArB,EAAqC,MAArC,EAA6C,YAA7C,CAAb;AACD,GAFD;AAGD;;AAED;AACA,MAAMQ,SAAS,wCAAqB;AAClCC,6BADkC;AAElCC;AAFkC,CAArB,CAAf;;AAKA;AACA,MAAMC,cAAc,UAApB;;AAEAjB,IAAIC,GAAJ,CACEgB,WADF,EAEEC,qBAAWC,IAAX,EAFF,EAGE,yCAAe;AACbL,QADa;AAEbM,WAAS,EAAEC,wBAAF,EAAUC,oBAAV,EAAgBC,oBAAhB;AAFI,CAAf,CAHF;AAQAvB,IAAIC,GAAJ,CAAQ,WAAR,EAAqBiB,qBAAWC,IAAX,EAArB,EAAwC,0CAAgB,EAAEF,WAAF,EAAhB,CAAxC;AACAjB,IAAIC,GAAJ,CAAQ,sBAAO,KAAP,CAAR;;kBAEeD,G","file":"app.js","sourcesContent":["import express from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport { graphqlExpress, graphiqlExpress } from 'apollo-server-express';\r\nimport { makeExecutableSchema } from 'graphql-tools';\r\nimport cors from 'cors';\r\nimport morgan from 'morgan';\r\nimport path from 'path';\r\n\r\nimport typeDefs from './schemas';\r\nimport resolvers from './resolvers';\r\n\r\nimport Meetup from './models/meetup';\r\nimport City from './models/city';\r\nimport User from './models/user';\r\n\r\n// DB config\r\nimport './db';\r\n\r\n// App init\r\nconst app = express();\r\n\r\n// Middlewares\r\napp.use(express.static(path.join(__dirname, '../../client/dist')));\r\napp.use(morgan('dev'));\r\napp.use(cors());\r\n\r\n// Serve static assets if in production\r\nif (process.env.NODE_ENV === 'production') {\r\n  app.use(express.static('../../client/dist'));\r\n\r\n  app.get('*', (req, res) => {\r\n    res.sendFile(path.join(__dirname, '../../client', 'dist', 'index.html'));\r\n  });\r\n}\r\n\r\n// Schema definition\r\nconst schema = makeExecutableSchema({\r\n  typeDefs,\r\n  resolvers,\r\n});\r\n\r\n// Graphql Endpoint\r\nconst endpointURL = '/graphql';\r\n\r\napp.use(\r\n  endpointURL,\r\n  bodyParser.json(),\r\n  graphqlExpress({\r\n    schema,\r\n    context: { Meetup, City, User },\r\n  })\r\n);\r\napp.use('/graphiql', bodyParser.json(), graphiqlExpress({ endpointURL }));\r\napp.use(morgan('dev'));\r\n\r\nexport default app;\r\n"]}